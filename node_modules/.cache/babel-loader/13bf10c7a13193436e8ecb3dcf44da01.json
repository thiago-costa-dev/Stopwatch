{"ast":null,"code":"var _jsxFileName = \"/home/thiago/Documents/React_Projects/stopwatch/src/components/Stopwatch.js\";\nimport React, { Component } from 'react';\nimport './Stopwatch.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Stopwatch extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      hours: \"00\",\n      minutes: \"00\",\n      seconds: \"00\"\n    };\n    this.hours = 0;\n    this.minutes = 0;\n    this.seconds = 0;\n\n    this.getTime = () => {\n      return `${this.state.hours}:${this.state.minutes}:${this.state.seconds}`;\n    };\n\n    this.putZeroOnLeft = number => {\n      if (number < 10) return `0${number}`;\n      return number;\n    };\n\n    this.tick = () => {\n      this.seconds++;\n\n      if (this.seconds === 60) {\n        this.seconds = 0;\n        this.minutes++;\n\n        if (this.minutes === 60) {\n          this.minutes = 0;\n          this.hours++;\n        }\n      }\n\n      this.setState({\n        hours: this.putZeroOnLeft(this.hours),\n        minutes: this.putZeroOnLeft(this.minutes),\n        seconds: this.putZeroOnLeft(this.seconds)\n      });\n    };\n\n    this.reset = () => {\n      if (this.myInterval) clearInterval(this.myInterval);\n      this.hours = 0;\n      this.minutes = 0;\n      this.seconds = 0;\n      this.setState({\n        hours: \"00\",\n        minutes: \"00\",\n        seconds: \"00\"\n      });\n      document.getElementById('timer').classList.add('stoped');\n    };\n\n    this.start = () => {\n      this.myInterval = setInterval(this.tick, 1000);\n      document.getElementById('timer').classList.remove('stoped');\n    };\n\n    this.stop = () => {\n      if (this.myInterval) clearInterval(this.myInterval);\n      document.getElementById('timer').classList.add('stoped');\n    };\n\n    this.render = () => {\n      return /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"timer stoped\",\n          id: \"timer\",\n          children: this.getTime()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.start,\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.stop,\n            children: \"Stop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.reset,\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this);\n    };\n  }\n\n}","map":{"version":3,"sources":["/home/thiago/Documents/React_Projects/stopwatch/src/components/Stopwatch.js"],"names":["React","Component","Stopwatch","state","hours","minutes","seconds","getTime","putZeroOnLeft","number","tick","setState","reset","myInterval","clearInterval","document","getElementById","classList","add","start","setInterval","remove","stop","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './Stopwatch.css';\n\nexport default class Stopwatch extends Component {\n    state = { hours: \"00\", minutes: \"00\", seconds: \"00\" };\n    hours = 0;\n    minutes = 0;\n    seconds = 0;\n\n    getTime = () => {\n        return `${this.state.hours}:${this.state.minutes}:${this.state.seconds}`;\n    }\n\n    putZeroOnLeft = (number) => {\n        if (number < 10) return `0${number}`;\n        return number;\n    }\n\n    tick = () => {\n        this.seconds++;\n        if (this.seconds === 60) {\n            this.seconds = 0;\n\n            this.minutes++;\n            if (this.minutes === 60) {\n                this.minutes = 0;\n\n                this.hours++;\n            }\n        }\n\n        this.setState({\n            hours: this.putZeroOnLeft(this.hours), \n            minutes: this.putZeroOnLeft(this.minutes), \n            seconds: this.putZeroOnLeft(this.seconds)\n        });\n    }\n\n    reset = () => {\n        if (this.myInterval) clearInterval(this.myInterval);\n\n        this.hours = 0; this.minutes = 0; this.seconds = 0;\n        this.setState({ hours: \"00\", minutes: \"00\", seconds: \"00\" });\n\n        document.getElementById('timer').classList.add('stoped');\n    }\n\n    start = () => {\n        this.myInterval = setInterval(this.tick, 1000);\n        document.getElementById('timer').classList.remove('stoped');\n    }\n\n    stop = () => {\n        if (this.myInterval) clearInterval(this.myInterval);\n        document.getElementById('timer').classList.add('stoped');\n    }\n\n    render = () => {\n        return (\n            <main className='container'>\n                <h1 className=\"timer stoped\" id=\"timer\">{this.getTime()}</h1>\n                <div className='buttons'>\n                    <button onClick={this.start}>Start</button>\n                    <button onClick={this.stop}>Stop</button>\n                    <button onClick={this.reset}>Reset</button>\n                </div>\n            </main>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}